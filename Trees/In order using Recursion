Example:1
Input: root = [1,null,2,3]
Output: [1,3,2]
Example 2:

Input: root = []
Output: []
Example 3:

Input: root = [1]
Output: [1]

[Recursive]:
Approach: In inorder traversal, the tree is traversed in this way: left, root, right.

The algorithm approach can be stated as:

We first recursively visit the left child and go on till we find a leaf node.
Then we print that node value.
Then we recursively visit the right child.
If we encounter a node pointing to NULL, we simply return to its parent.


code:
class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
         ArrayList<Integer> list=new ArrayList<>();
    public List<Integer> inorderTraversal(TreeNode root) {
        if(root==null)
            return list;
        inorderTraversal(root.left);
        list.add(root.val);
        inorderTraversal(root.right);
        return list;
        
    }
}
